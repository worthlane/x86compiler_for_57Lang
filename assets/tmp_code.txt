jmp :_0_

:1337    % FUNC START
pop [0]
push [0]
push 0
ja :TRUE_1         % COMPARISON
push 0
jmp :FALSE_1
:TRUE_1
push 1
:FALSE_1           % COMPARISON END
push 0      % IF START
je :FALSE_COND_0
push 0
ret
:FALSE_COND_0      % IF END
push [0]
push 0
je :TRUE_2         % COMPARISON
push 0
jmp :FALSE_2
:TRUE_2
push 1
:FALSE_2           % COMPARISON END
push 0      % IF START
je :FALSE_COND_1
push 1
ret
:FALSE_COND_1      % IF END
push 0
pop [1]
push [0]
push 0
jb :TRUE_3         % COMPARISON
push 0
jmp :FALSE_3
:TRUE_3
push 1
:FALSE_3           % COMPARISON END
push 0      % IF START
je :FALSE_COND_2
push [0]
push [0]
push 1
sub
call :1337    % CALLING FUNC
mul
pop [1]
push [1]
ret
:FALSE_COND_2      % IF END
ret    % FUNC END

:_0_    % FUNC START
push 0
pop [2]
in
pop [2]
push [2]
call :1337    % CALLING FUNC
pop [3]
push [3]
out
ret    % FUNC END
hlt
